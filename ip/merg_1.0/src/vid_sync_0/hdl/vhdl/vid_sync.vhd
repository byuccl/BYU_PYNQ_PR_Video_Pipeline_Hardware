-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vid_sync is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_a_24_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_a_24_TVALID : IN STD_LOGIC;
    stream_in_a_24_TREADY : OUT STD_LOGIC;
    stream_in_a_24_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_a_24_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_b_24_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_b_24_TVALID : IN STD_LOGIC;
    stream_in_b_24_TREADY : OUT STD_LOGIC;
    stream_in_b_24_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_b_24_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_a_24_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_a_24_TVALID : OUT STD_LOGIC;
    stream_out_a_24_TREADY : IN STD_LOGIC;
    stream_out_a_24_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_a_24_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_b_24_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_b_24_TVALID : OUT STD_LOGIC;
    stream_out_b_24_TREADY : IN STD_LOGIC;
    stream_out_b_24_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_b_24_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of vid_sync is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "vid_sync,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.370000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=298,HLS_SYN_LUT=611}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal stream_in_a_24_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_a_24_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_a_24_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_a_24_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_a_24_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_a_24_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_a_24_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_a_24_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_a_24_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_a_24_data_V_0_sel : STD_LOGIC;
    signal stream_in_a_24_data_V_0_load_A : STD_LOGIC;
    signal stream_in_a_24_data_V_0_load_B : STD_LOGIC;
    signal stream_in_a_24_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_a_24_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_a_24_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_a_24_user_V_0_vld_in : STD_LOGIC;
    signal stream_in_a_24_user_V_0_vld_out : STD_LOGIC;
    signal stream_in_a_24_user_V_0_ack_in : STD_LOGIC;
    signal stream_in_a_24_user_V_0_ack_out : STD_LOGIC;
    signal stream_in_a_24_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_a_24_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_a_24_user_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_a_24_user_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_a_24_user_V_0_sel : STD_LOGIC;
    signal stream_in_a_24_user_V_0_load_A : STD_LOGIC;
    signal stream_in_a_24_user_V_0_load_B : STD_LOGIC;
    signal stream_in_a_24_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_a_24_user_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_a_24_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_a_24_last_V_0_vld_in : STD_LOGIC;
    signal stream_in_a_24_last_V_0_vld_out : STD_LOGIC;
    signal stream_in_a_24_last_V_0_ack_in : STD_LOGIC;
    signal stream_in_a_24_last_V_0_ack_out : STD_LOGIC;
    signal stream_in_a_24_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_a_24_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_a_24_last_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_a_24_last_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_a_24_last_V_0_sel : STD_LOGIC;
    signal stream_in_a_24_last_V_0_load_A : STD_LOGIC;
    signal stream_in_a_24_last_V_0_load_B : STD_LOGIC;
    signal stream_in_a_24_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_a_24_last_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_b_24_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_b_24_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_b_24_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_b_24_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_b_24_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_b_24_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_b_24_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_b_24_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_b_24_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_b_24_data_V_0_sel : STD_LOGIC;
    signal stream_in_b_24_data_V_0_load_A : STD_LOGIC;
    signal stream_in_b_24_data_V_0_load_B : STD_LOGIC;
    signal stream_in_b_24_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_b_24_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_b_24_last_V_0_vld_in : STD_LOGIC;
    signal stream_in_b_24_last_V_0_ack_out : STD_LOGIC;
    signal stream_in_b_24_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_a_24_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_a_24_data_V_1_vld_in : STD_LOGIC;
    signal stream_out_a_24_data_V_1_vld_out : STD_LOGIC;
    signal stream_out_a_24_data_V_1_ack_in : STD_LOGIC;
    signal stream_out_a_24_data_V_1_ack_out : STD_LOGIC;
    signal stream_out_a_24_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_a_24_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_a_24_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_a_24_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_a_24_data_V_1_sel : STD_LOGIC;
    signal stream_out_a_24_data_V_1_load_A : STD_LOGIC;
    signal stream_out_a_24_data_V_1_load_B : STD_LOGIC;
    signal stream_out_a_24_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_a_24_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_a_24_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_a_24_user_V_1_vld_in : STD_LOGIC;
    signal stream_out_a_24_user_V_1_vld_out : STD_LOGIC;
    signal stream_out_a_24_user_V_1_ack_in : STD_LOGIC;
    signal stream_out_a_24_user_V_1_ack_out : STD_LOGIC;
    signal stream_out_a_24_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_a_24_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_a_24_user_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_a_24_user_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_a_24_user_V_1_sel : STD_LOGIC;
    signal stream_out_a_24_user_V_1_load_A : STD_LOGIC;
    signal stream_out_a_24_user_V_1_load_B : STD_LOGIC;
    signal stream_out_a_24_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_a_24_user_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_a_24_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_a_24_last_V_1_vld_in : STD_LOGIC;
    signal stream_out_a_24_last_V_1_vld_out : STD_LOGIC;
    signal stream_out_a_24_last_V_1_ack_in : STD_LOGIC;
    signal stream_out_a_24_last_V_1_ack_out : STD_LOGIC;
    signal stream_out_a_24_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_a_24_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_a_24_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_a_24_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_a_24_last_V_1_sel : STD_LOGIC;
    signal stream_out_a_24_last_V_1_load_A : STD_LOGIC;
    signal stream_out_a_24_last_V_1_load_B : STD_LOGIC;
    signal stream_out_a_24_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_a_24_last_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_b_24_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_b_24_data_V_1_vld_in : STD_LOGIC;
    signal stream_out_b_24_data_V_1_vld_out : STD_LOGIC;
    signal stream_out_b_24_data_V_1_ack_in : STD_LOGIC;
    signal stream_out_b_24_data_V_1_ack_out : STD_LOGIC;
    signal stream_out_b_24_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_b_24_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_out_b_24_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_b_24_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_b_24_data_V_1_sel : STD_LOGIC;
    signal stream_out_b_24_data_V_1_load_A : STD_LOGIC;
    signal stream_out_b_24_data_V_1_load_B : STD_LOGIC;
    signal stream_out_b_24_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_b_24_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_b_24_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_b_24_user_V_1_vld_in : STD_LOGIC;
    signal stream_out_b_24_user_V_1_vld_out : STD_LOGIC;
    signal stream_out_b_24_user_V_1_ack_in : STD_LOGIC;
    signal stream_out_b_24_user_V_1_ack_out : STD_LOGIC;
    signal stream_out_b_24_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_b_24_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_b_24_user_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_b_24_user_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_b_24_user_V_1_sel : STD_LOGIC;
    signal stream_out_b_24_user_V_1_load_A : STD_LOGIC;
    signal stream_out_b_24_user_V_1_load_B : STD_LOGIC;
    signal stream_out_b_24_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_b_24_user_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_b_24_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_b_24_last_V_1_vld_in : STD_LOGIC;
    signal stream_out_b_24_last_V_1_vld_out : STD_LOGIC;
    signal stream_out_b_24_last_V_1_ack_in : STD_LOGIC;
    signal stream_out_b_24_last_V_1_ack_out : STD_LOGIC;
    signal stream_out_b_24_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_b_24_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_b_24_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_b_24_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_b_24_last_V_1_sel : STD_LOGIC;
    signal stream_out_b_24_last_V_1_load_A : STD_LOGIC;
    signal stream_out_b_24_last_V_1_load_B : STD_LOGIC;
    signal stream_out_b_24_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_b_24_last_V_1_state_cmp_full : STD_LOGIC;
    signal tmpc_V : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal tmpd_V : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal vid_id : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal stream_in_a_24_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_in_b_24_TDATA_blk_n : STD_LOGIC;
    signal stream_out_a_24_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal stream_out_b_24_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmpa_V_1_fu_146_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal vid_id_assign_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_a_24_data_V_0_ack_out = ap_const_logic_1) and (stream_in_a_24_data_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_a_24_data_V_0_sel_rd <= not(stream_in_a_24_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_a_24_data_V_0_ack_in = ap_const_logic_1) and (stream_in_a_24_data_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_a_24_data_V_0_sel_wr <= not(stream_in_a_24_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_a_24_data_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_data_V_0_state = ap_const_lv2_2)) or ((stream_in_a_24_data_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_data_V_0_state = ap_const_lv2_3) and (stream_in_a_24_data_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_a_24_data_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_a_24_data_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_data_V_0_state = ap_const_lv2_1)) or ((stream_in_a_24_data_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_data_V_0_state = ap_const_lv2_3) and (stream_in_a_24_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_a_24_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_a_24_data_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_data_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_a_24_data_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_data_V_0_vld_in = ap_const_logic_1))) and (stream_in_a_24_data_V_0_state = ap_const_lv2_3)) or ((stream_in_a_24_data_V_0_state = ap_const_lv2_1) and (stream_in_a_24_data_V_0_ack_out = ap_const_logic_1)) or ((stream_in_a_24_data_V_0_state = ap_const_lv2_2) and (stream_in_a_24_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_a_24_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_a_24_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_a_24_last_V_0_ack_out = ap_const_logic_1) and (stream_in_a_24_last_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_a_24_last_V_0_sel_rd <= not(stream_in_a_24_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_a_24_last_V_0_ack_in = ap_const_logic_1) and (stream_in_a_24_last_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_a_24_last_V_0_sel_wr <= not(stream_in_a_24_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_a_24_last_V_0_state = ap_const_lv2_2) and (stream_in_a_24_last_V_0_vld_in = ap_const_logic_0)) or ((stream_in_a_24_last_V_0_state = ap_const_lv2_3) and (stream_in_a_24_last_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_last_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_a_24_last_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_a_24_last_V_0_state = ap_const_lv2_1) and (stream_in_a_24_last_V_0_ack_out = ap_const_logic_0)) or ((stream_in_a_24_last_V_0_state = ap_const_lv2_3) and (stream_in_a_24_last_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_a_24_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_a_24_last_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_last_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_a_24_last_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_last_V_0_vld_in = ap_const_logic_1))) and (stream_in_a_24_last_V_0_state = ap_const_lv2_3)) or ((stream_in_a_24_last_V_0_state = ap_const_lv2_1) and (stream_in_a_24_last_V_0_ack_out = ap_const_logic_1)) or ((stream_in_a_24_last_V_0_state = ap_const_lv2_2) and (stream_in_a_24_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_a_24_last_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_a_24_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_a_24_user_V_0_ack_out = ap_const_logic_1) and (stream_in_a_24_user_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_a_24_user_V_0_sel_rd <= not(stream_in_a_24_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_a_24_user_V_0_ack_in = ap_const_logic_1) and (stream_in_a_24_user_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_a_24_user_V_0_sel_wr <= not(stream_in_a_24_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_a_24_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_a_24_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_a_24_user_V_0_state = ap_const_lv2_3) and (stream_in_a_24_user_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_user_V_0_ack_out = ap_const_logic_1)) or ((stream_in_a_24_user_V_0_state = ap_const_lv2_2) and (stream_in_a_24_user_V_0_vld_in = ap_const_logic_0)))) then 
                    stream_in_a_24_user_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_a_24_user_V_0_state = ap_const_lv2_1) and (stream_in_a_24_user_V_0_ack_out = ap_const_logic_0)) or ((stream_in_a_24_user_V_0_state = ap_const_lv2_3) and (stream_in_a_24_user_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_a_24_user_V_0_state <= ap_const_lv2_1;
                elsif ((((stream_in_a_24_user_V_0_state = ap_const_lv2_1) and (stream_in_a_24_user_V_0_ack_out = ap_const_logic_1)) or ((stream_in_a_24_user_V_0_state = ap_const_lv2_2) and (stream_in_a_24_user_V_0_vld_in = ap_const_logic_1)) or (not(((stream_in_a_24_user_V_0_vld_in = ap_const_logic_0) and (stream_in_a_24_user_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_a_24_user_V_0_ack_out = ap_const_logic_0) and (stream_in_a_24_user_V_0_vld_in = ap_const_logic_1))) and (stream_in_a_24_user_V_0_state = ap_const_lv2_3)))) then 
                    stream_in_a_24_user_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_a_24_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_b_24_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_b_24_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_b_24_data_V_0_ack_out = ap_const_logic_1) and (stream_in_b_24_data_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_b_24_data_V_0_sel_rd <= not(stream_in_b_24_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_b_24_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_b_24_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_b_24_data_V_0_ack_in = ap_const_logic_1) and (stream_in_b_24_data_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_b_24_data_V_0_sel_wr <= not(stream_in_b_24_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_b_24_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_b_24_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_b_24_data_V_0_state = ap_const_lv2_2) and (stream_in_b_24_data_V_0_vld_in = ap_const_logic_0)) or ((stream_in_b_24_data_V_0_state = ap_const_lv2_3) and (stream_in_b_24_data_V_0_vld_in = ap_const_logic_0) and (stream_in_b_24_data_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_b_24_data_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_b_24_data_V_0_state = ap_const_lv2_1) and (stream_in_b_24_data_V_0_ack_out = ap_const_logic_0)) or ((stream_in_b_24_data_V_0_state = ap_const_lv2_3) and (stream_in_b_24_data_V_0_ack_out = ap_const_logic_0) and (stream_in_b_24_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_b_24_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_b_24_data_V_0_vld_in = ap_const_logic_0) and (stream_in_b_24_data_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_b_24_data_V_0_ack_out = ap_const_logic_0) and (stream_in_b_24_data_V_0_vld_in = ap_const_logic_1))) and (stream_in_b_24_data_V_0_state = ap_const_lv2_3)) or ((stream_in_b_24_data_V_0_state = ap_const_lv2_1) and (stream_in_b_24_data_V_0_ack_out = ap_const_logic_1)) or ((stream_in_b_24_data_V_0_state = ap_const_lv2_2) and (stream_in_b_24_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_b_24_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_b_24_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_b_24_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_b_24_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_b_24_last_V_0_state = ap_const_lv2_2) and (stream_in_b_24_last_V_0_vld_in = ap_const_logic_0)) or ((stream_in_b_24_last_V_0_state = ap_const_lv2_3) and (stream_in_b_24_last_V_0_vld_in = ap_const_logic_0) and (stream_in_b_24_last_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_b_24_last_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_b_24_last_V_0_state = ap_const_lv2_1) and (stream_in_b_24_last_V_0_ack_out = ap_const_logic_0)) or ((stream_in_b_24_last_V_0_state = ap_const_lv2_3) and (stream_in_b_24_last_V_0_ack_out = ap_const_logic_0) and (stream_in_b_24_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_b_24_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_b_24_last_V_0_vld_in = ap_const_logic_0) and (stream_in_b_24_last_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_b_24_last_V_0_ack_out = ap_const_logic_0) and (stream_in_b_24_last_V_0_vld_in = ap_const_logic_1))) and (stream_in_b_24_last_V_0_state = ap_const_lv2_3)) or ((stream_in_b_24_last_V_0_state = ap_const_lv2_1) and (stream_in_b_24_last_V_0_ack_out = ap_const_logic_1)) or ((stream_in_b_24_last_V_0_state = ap_const_lv2_2) and (stream_in_b_24_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_b_24_last_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_b_24_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_a_24_data_V_1_ack_out = ap_const_logic_1) and (stream_out_a_24_data_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_a_24_data_V_1_sel_rd <= not(stream_out_a_24_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_a_24_data_V_1_ack_in = ap_const_logic_1) and (stream_out_a_24_data_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_a_24_data_V_1_sel_wr <= not(stream_out_a_24_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_a_24_data_V_1_state = ap_const_lv2_2) and (stream_out_a_24_data_V_1_vld_in = ap_const_logic_0)) or ((stream_out_a_24_data_V_1_state = ap_const_lv2_3) and (stream_out_a_24_data_V_1_vld_in = ap_const_logic_0) and (stream_out_a_24_data_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_a_24_data_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_a_24_data_V_1_state = ap_const_lv2_1) and (stream_out_a_24_data_V_1_ack_out = ap_const_logic_0)) or ((stream_out_a_24_data_V_1_state = ap_const_lv2_3) and (stream_out_a_24_data_V_1_ack_out = ap_const_logic_0) and (stream_out_a_24_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_a_24_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_a_24_data_V_1_vld_in = ap_const_logic_0) and (stream_out_a_24_data_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_a_24_data_V_1_ack_out = ap_const_logic_0) and (stream_out_a_24_data_V_1_vld_in = ap_const_logic_1))) and (stream_out_a_24_data_V_1_state = ap_const_lv2_3)) or ((stream_out_a_24_data_V_1_state = ap_const_lv2_1) and (stream_out_a_24_data_V_1_ack_out = ap_const_logic_1)) or ((stream_out_a_24_data_V_1_state = ap_const_lv2_2) and (stream_out_a_24_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_a_24_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_a_24_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_a_24_last_V_1_ack_out = ap_const_logic_1) and (stream_out_a_24_last_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_a_24_last_V_1_sel_rd <= not(stream_out_a_24_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_a_24_last_V_1_ack_in = ap_const_logic_1) and (stream_out_a_24_last_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_a_24_last_V_1_sel_wr <= not(stream_out_a_24_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_a_24_last_V_1_state = ap_const_lv2_2) and (stream_out_a_24_last_V_1_vld_in = ap_const_logic_0)) or ((stream_out_a_24_last_V_1_state = ap_const_lv2_3) and (stream_out_a_24_last_V_1_vld_in = ap_const_logic_0) and (stream_out_a_24_last_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_a_24_last_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_a_24_last_V_1_state = ap_const_lv2_1) and (stream_out_a_24_last_V_1_ack_out = ap_const_logic_0)) or ((stream_out_a_24_last_V_1_state = ap_const_lv2_3) and (stream_out_a_24_last_V_1_ack_out = ap_const_logic_0) and (stream_out_a_24_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_a_24_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_a_24_last_V_1_vld_in = ap_const_logic_0) and (stream_out_a_24_last_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_a_24_last_V_1_ack_out = ap_const_logic_0) and (stream_out_a_24_last_V_1_vld_in = ap_const_logic_1))) and (stream_out_a_24_last_V_1_state = ap_const_lv2_3)) or ((stream_out_a_24_last_V_1_state = ap_const_lv2_1) and (stream_out_a_24_last_V_1_ack_out = ap_const_logic_1)) or ((stream_out_a_24_last_V_1_state = ap_const_lv2_2) and (stream_out_a_24_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_a_24_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_a_24_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_a_24_user_V_1_ack_out = ap_const_logic_1) and (stream_out_a_24_user_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_a_24_user_V_1_sel_rd <= not(stream_out_a_24_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_a_24_user_V_1_ack_in = ap_const_logic_1) and (stream_out_a_24_user_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_a_24_user_V_1_sel_wr <= not(stream_out_a_24_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_a_24_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_a_24_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_a_24_user_V_1_state = ap_const_lv2_2) and (stream_out_a_24_user_V_1_vld_in = ap_const_logic_0)) or ((stream_out_a_24_user_V_1_state = ap_const_lv2_3) and (stream_out_a_24_user_V_1_vld_in = ap_const_logic_0) and (stream_out_a_24_user_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_a_24_user_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_a_24_user_V_1_state = ap_const_lv2_1) and (stream_out_a_24_user_V_1_ack_out = ap_const_logic_0)) or ((stream_out_a_24_user_V_1_state = ap_const_lv2_3) and (stream_out_a_24_user_V_1_ack_out = ap_const_logic_0) and (stream_out_a_24_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_a_24_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_a_24_user_V_1_vld_in = ap_const_logic_0) and (stream_out_a_24_user_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_a_24_user_V_1_ack_out = ap_const_logic_0) and (stream_out_a_24_user_V_1_vld_in = ap_const_logic_1))) and (stream_out_a_24_user_V_1_state = ap_const_lv2_3)) or ((stream_out_a_24_user_V_1_state = ap_const_lv2_1) and (stream_out_a_24_user_V_1_ack_out = ap_const_logic_1)) or ((stream_out_a_24_user_V_1_state = ap_const_lv2_2) and (stream_out_a_24_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_a_24_user_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_a_24_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_b_24_data_V_1_ack_out = ap_const_logic_1) and (stream_out_b_24_data_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_b_24_data_V_1_sel_rd <= not(stream_out_b_24_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_b_24_data_V_1_ack_in = ap_const_logic_1) and (stream_out_b_24_data_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_b_24_data_V_1_sel_wr <= not(stream_out_b_24_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_b_24_data_V_1_state = ap_const_lv2_2) and (stream_out_b_24_data_V_1_vld_in = ap_const_logic_0)) or ((stream_out_b_24_data_V_1_state = ap_const_lv2_3) and (stream_out_b_24_data_V_1_vld_in = ap_const_logic_0) and (stream_out_b_24_data_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_b_24_data_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_b_24_data_V_1_state = ap_const_lv2_1) and (stream_out_b_24_data_V_1_ack_out = ap_const_logic_0)) or ((stream_out_b_24_data_V_1_state = ap_const_lv2_3) and (stream_out_b_24_data_V_1_ack_out = ap_const_logic_0) and (stream_out_b_24_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_b_24_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_b_24_data_V_1_vld_in = ap_const_logic_0) and (stream_out_b_24_data_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_b_24_data_V_1_ack_out = ap_const_logic_0) and (stream_out_b_24_data_V_1_vld_in = ap_const_logic_1))) and (stream_out_b_24_data_V_1_state = ap_const_lv2_3)) or ((stream_out_b_24_data_V_1_state = ap_const_lv2_1) and (stream_out_b_24_data_V_1_ack_out = ap_const_logic_1)) or ((stream_out_b_24_data_V_1_state = ap_const_lv2_2) and (stream_out_b_24_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_b_24_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_b_24_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_b_24_last_V_1_ack_out = ap_const_logic_1) and (stream_out_b_24_last_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_b_24_last_V_1_sel_rd <= not(stream_out_b_24_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_b_24_last_V_1_ack_in = ap_const_logic_1) and (stream_out_b_24_last_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_b_24_last_V_1_sel_wr <= not(stream_out_b_24_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_b_24_last_V_1_state = ap_const_lv2_2) and (stream_out_b_24_last_V_1_vld_in = ap_const_logic_0)) or ((stream_out_b_24_last_V_1_state = ap_const_lv2_3) and (stream_out_b_24_last_V_1_vld_in = ap_const_logic_0) and (stream_out_b_24_last_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_b_24_last_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_b_24_last_V_1_state = ap_const_lv2_1) and (stream_out_b_24_last_V_1_ack_out = ap_const_logic_0)) or ((stream_out_b_24_last_V_1_state = ap_const_lv2_3) and (stream_out_b_24_last_V_1_ack_out = ap_const_logic_0) and (stream_out_b_24_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_b_24_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_b_24_last_V_1_vld_in = ap_const_logic_0) and (stream_out_b_24_last_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_b_24_last_V_1_ack_out = ap_const_logic_0) and (stream_out_b_24_last_V_1_vld_in = ap_const_logic_1))) and (stream_out_b_24_last_V_1_state = ap_const_lv2_3)) or ((stream_out_b_24_last_V_1_state = ap_const_lv2_1) and (stream_out_b_24_last_V_1_ack_out = ap_const_logic_1)) or ((stream_out_b_24_last_V_1_state = ap_const_lv2_2) and (stream_out_b_24_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_b_24_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_b_24_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_b_24_user_V_1_ack_out = ap_const_logic_1) and (stream_out_b_24_user_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_b_24_user_V_1_sel_rd <= not(stream_out_b_24_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_b_24_user_V_1_ack_in = ap_const_logic_1) and (stream_out_b_24_user_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_b_24_user_V_1_sel_wr <= not(stream_out_b_24_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_b_24_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_b_24_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_b_24_user_V_1_state = ap_const_lv2_2) and (stream_out_b_24_user_V_1_vld_in = ap_const_logic_0)) or ((stream_out_b_24_user_V_1_state = ap_const_lv2_3) and (stream_out_b_24_user_V_1_vld_in = ap_const_logic_0) and (stream_out_b_24_user_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_b_24_user_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_b_24_user_V_1_state = ap_const_lv2_1) and (stream_out_b_24_user_V_1_ack_out = ap_const_logic_0)) or ((stream_out_b_24_user_V_1_state = ap_const_lv2_3) and (stream_out_b_24_user_V_1_ack_out = ap_const_logic_0) and (stream_out_b_24_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_b_24_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_b_24_user_V_1_vld_in = ap_const_logic_0) and (stream_out_b_24_user_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_b_24_user_V_1_ack_out = ap_const_logic_0) and (stream_out_b_24_user_V_1_vld_in = ap_const_logic_1))) and (stream_out_b_24_user_V_1_state = ap_const_lv2_3)) or ((stream_out_b_24_user_V_1_state = ap_const_lv2_1) and (stream_out_b_24_user_V_1_ack_out = ap_const_logic_1)) or ((stream_out_b_24_user_V_1_state = ap_const_lv2_2) and (stream_out_b_24_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_b_24_user_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_b_24_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_a_24_data_V_0_load_A = ap_const_logic_1)) then
                stream_in_a_24_data_V_0_payload_A <= stream_in_a_24_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_a_24_data_V_0_load_B = ap_const_logic_1)) then
                stream_in_a_24_data_V_0_payload_B <= stream_in_a_24_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_a_24_last_V_0_load_A = ap_const_logic_1)) then
                stream_in_a_24_last_V_0_payload_A <= stream_in_a_24_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_a_24_last_V_0_load_B = ap_const_logic_1)) then
                stream_in_a_24_last_V_0_payload_B <= stream_in_a_24_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_a_24_user_V_0_load_A = ap_const_logic_1)) then
                stream_in_a_24_user_V_0_payload_A <= stream_in_a_24_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_a_24_user_V_0_load_B = ap_const_logic_1)) then
                stream_in_a_24_user_V_0_payload_B <= stream_in_a_24_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_b_24_data_V_0_load_A = ap_const_logic_1)) then
                stream_in_b_24_data_V_0_payload_A <= stream_in_b_24_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_b_24_data_V_0_load_B = ap_const_logic_1)) then
                stream_in_b_24_data_V_0_payload_B <= stream_in_b_24_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_a_24_data_V_1_load_A = ap_const_logic_1)) then
                stream_out_a_24_data_V_1_payload_A <= tmpc_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_a_24_data_V_1_load_B = ap_const_logic_1)) then
                stream_out_a_24_data_V_1_payload_B <= tmpc_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_a_24_last_V_1_load_A = ap_const_logic_1)) then
                stream_out_a_24_last_V_1_payload_A <= stream_in_a_24_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_a_24_last_V_1_load_B = ap_const_logic_1)) then
                stream_out_a_24_last_V_1_payload_B <= stream_in_a_24_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_a_24_user_V_1_load_A = ap_const_logic_1)) then
                stream_out_a_24_user_V_1_payload_A <= stream_in_a_24_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_a_24_user_V_1_load_B = ap_const_logic_1)) then
                stream_out_a_24_user_V_1_payload_B <= stream_in_a_24_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_b_24_data_V_1_load_A = ap_const_logic_1)) then
                stream_out_b_24_data_V_1_payload_A <= tmpd_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_b_24_data_V_1_load_B = ap_const_logic_1)) then
                stream_out_b_24_data_V_1_payload_B <= tmpd_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_b_24_last_V_1_load_A = ap_const_logic_1)) then
                stream_out_b_24_last_V_1_payload_A <= stream_in_a_24_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_b_24_last_V_1_load_B = ap_const_logic_1)) then
                stream_out_b_24_last_V_1_payload_B <= stream_in_a_24_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_b_24_user_V_1_load_A = ap_const_logic_1)) then
                stream_out_b_24_user_V_1_payload_A <= stream_in_a_24_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_b_24_user_V_1_load_B = ap_const_logic_1)) then
                stream_out_b_24_user_V_1_payload_B <= stream_in_a_24_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmpc_V <= tmpa_V_1_fu_146_p3;
                tmpd_V <= tmpa_V_1_fu_146_p3;
                vid_id <= vid_id_assign_fu_140_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(stream_in_a_24_data_V_0_vld_out, stream_in_b_24_data_V_0_vld_out, stream_out_a_24_data_V_1_ack_in, stream_out_a_24_user_V_1_ack_in, stream_out_a_24_last_V_1_ack_in, stream_out_b_24_data_V_1_ack_in, stream_out_b_24_user_V_1_ack_in, stream_out_b_24_last_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_b_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_data_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_data_V_1_ack_in = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((stream_in_b_24_data_V_0_vld_out = ap_const_logic_0) or (stream_in_a_24_data_V_0_vld_out = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(stream_in_a_24_data_V_0_vld_out, stream_in_b_24_data_V_0_vld_out, stream_out_a_24_data_V_1_ack_in, stream_out_a_24_user_V_1_ack_in, stream_out_a_24_last_V_1_ack_in, stream_out_b_24_data_V_1_ack_in, stream_out_b_24_user_V_1_ack_in, stream_out_b_24_last_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_io, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_b_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_data_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((stream_in_b_24_data_V_0_vld_out = ap_const_logic_0) or (stream_in_a_24_data_V_0_vld_out = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(stream_in_a_24_data_V_0_vld_out, stream_in_b_24_data_V_0_vld_out, stream_out_a_24_data_V_1_ack_in, stream_out_a_24_user_V_1_ack_in, stream_out_a_24_last_V_1_ack_in, stream_out_b_24_data_V_1_ack_in, stream_out_b_24_user_V_1_ack_in, stream_out_b_24_last_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_io, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((stream_out_b_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_data_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((stream_in_b_24_data_V_0_vld_out = ap_const_logic_0) or (stream_in_a_24_data_V_0_vld_out = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(stream_out_a_24_data_V_1_ack_in, stream_out_b_24_data_V_1_ack_in)
    begin
                ap_block_state2_io <= ((stream_out_b_24_data_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(stream_in_a_24_data_V_0_vld_out, stream_in_b_24_data_V_0_vld_out)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((stream_in_b_24_data_V_0_vld_out = ap_const_logic_0) or (stream_in_a_24_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(stream_out_a_24_data_V_1_ack_in, stream_out_b_24_data_V_1_ack_in)
    begin
                ap_block_state3_io <= ((stream_out_b_24_data_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_out_a_24_data_V_1_ack_in, stream_out_a_24_user_V_1_ack_in, stream_out_a_24_last_V_1_ack_in, stream_out_b_24_data_V_1_ack_in, stream_out_b_24_user_V_1_ack_in, stream_out_b_24_last_V_1_ack_in)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((stream_out_b_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_b_24_data_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_last_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_user_V_1_ack_in = ap_const_logic_0) or (stream_out_a_24_data_V_1_ack_in = ap_const_logic_0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    stream_in_a_24_TDATA_blk_n_assign_proc : process(stream_in_a_24_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_a_24_TDATA_blk_n <= stream_in_a_24_data_V_0_state(0);
        else 
            stream_in_a_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_a_24_TREADY <= stream_in_a_24_last_V_0_state(1);
    stream_in_a_24_data_V_0_ack_in <= stream_in_a_24_data_V_0_state(1);

    stream_in_a_24_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_a_24_data_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_a_24_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_a_24_data_V_0_data_out_assign_proc : process(stream_in_a_24_data_V_0_payload_A, stream_in_a_24_data_V_0_payload_B, stream_in_a_24_data_V_0_sel)
    begin
        if ((stream_in_a_24_data_V_0_sel = ap_const_logic_1)) then 
            stream_in_a_24_data_V_0_data_out <= stream_in_a_24_data_V_0_payload_B;
        else 
            stream_in_a_24_data_V_0_data_out <= stream_in_a_24_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_a_24_data_V_0_load_A <= (stream_in_a_24_data_V_0_state_cmp_full and not(stream_in_a_24_data_V_0_sel_wr));
    stream_in_a_24_data_V_0_load_B <= (stream_in_a_24_data_V_0_state_cmp_full and stream_in_a_24_data_V_0_sel_wr);
    stream_in_a_24_data_V_0_sel <= stream_in_a_24_data_V_0_sel_rd;
    stream_in_a_24_data_V_0_state_cmp_full <= '0' when (stream_in_a_24_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_a_24_data_V_0_vld_in <= stream_in_a_24_TVALID;
    stream_in_a_24_data_V_0_vld_out <= stream_in_a_24_data_V_0_state(0);
    stream_in_a_24_last_V_0_ack_in <= stream_in_a_24_last_V_0_state(1);

    stream_in_a_24_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_a_24_last_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_a_24_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_a_24_last_V_0_data_out_assign_proc : process(stream_in_a_24_last_V_0_payload_A, stream_in_a_24_last_V_0_payload_B, stream_in_a_24_last_V_0_sel)
    begin
        if ((stream_in_a_24_last_V_0_sel = ap_const_logic_1)) then 
            stream_in_a_24_last_V_0_data_out <= stream_in_a_24_last_V_0_payload_B;
        else 
            stream_in_a_24_last_V_0_data_out <= stream_in_a_24_last_V_0_payload_A;
        end if; 
    end process;

    stream_in_a_24_last_V_0_load_A <= (stream_in_a_24_last_V_0_state_cmp_full and not(stream_in_a_24_last_V_0_sel_wr));
    stream_in_a_24_last_V_0_load_B <= (stream_in_a_24_last_V_0_state_cmp_full and stream_in_a_24_last_V_0_sel_wr);
    stream_in_a_24_last_V_0_sel <= stream_in_a_24_last_V_0_sel_rd;
    stream_in_a_24_last_V_0_state_cmp_full <= '0' when (stream_in_a_24_last_V_0_state = ap_const_lv2_1) else '1';
    stream_in_a_24_last_V_0_vld_in <= stream_in_a_24_TVALID;
    stream_in_a_24_last_V_0_vld_out <= stream_in_a_24_last_V_0_state(0);
    stream_in_a_24_user_V_0_ack_in <= stream_in_a_24_user_V_0_state(1);

    stream_in_a_24_user_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_a_24_user_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_a_24_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_a_24_user_V_0_data_out_assign_proc : process(stream_in_a_24_user_V_0_payload_A, stream_in_a_24_user_V_0_payload_B, stream_in_a_24_user_V_0_sel)
    begin
        if ((stream_in_a_24_user_V_0_sel = ap_const_logic_1)) then 
            stream_in_a_24_user_V_0_data_out <= stream_in_a_24_user_V_0_payload_B;
        else 
            stream_in_a_24_user_V_0_data_out <= stream_in_a_24_user_V_0_payload_A;
        end if; 
    end process;

    stream_in_a_24_user_V_0_load_A <= (stream_in_a_24_user_V_0_state_cmp_full and not(stream_in_a_24_user_V_0_sel_wr));
    stream_in_a_24_user_V_0_load_B <= (stream_in_a_24_user_V_0_state_cmp_full and stream_in_a_24_user_V_0_sel_wr);
    stream_in_a_24_user_V_0_sel <= stream_in_a_24_user_V_0_sel_rd;
    stream_in_a_24_user_V_0_state_cmp_full <= '0' when (stream_in_a_24_user_V_0_state = ap_const_lv2_1) else '1';
    stream_in_a_24_user_V_0_vld_in <= stream_in_a_24_TVALID;
    stream_in_a_24_user_V_0_vld_out <= stream_in_a_24_user_V_0_state(0);

    stream_in_b_24_TDATA_blk_n_assign_proc : process(stream_in_b_24_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_b_24_TDATA_blk_n <= stream_in_b_24_data_V_0_state(0);
        else 
            stream_in_b_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_b_24_TREADY <= stream_in_b_24_last_V_0_state(1);
    stream_in_b_24_data_V_0_ack_in <= stream_in_b_24_data_V_0_state(1);

    stream_in_b_24_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_b_24_data_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_b_24_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_b_24_data_V_0_data_out_assign_proc : process(stream_in_b_24_data_V_0_payload_A, stream_in_b_24_data_V_0_payload_B, stream_in_b_24_data_V_0_sel)
    begin
        if ((stream_in_b_24_data_V_0_sel = ap_const_logic_1)) then 
            stream_in_b_24_data_V_0_data_out <= stream_in_b_24_data_V_0_payload_B;
        else 
            stream_in_b_24_data_V_0_data_out <= stream_in_b_24_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_b_24_data_V_0_load_A <= (stream_in_b_24_data_V_0_state_cmp_full and not(stream_in_b_24_data_V_0_sel_wr));
    stream_in_b_24_data_V_0_load_B <= (stream_in_b_24_data_V_0_state_cmp_full and stream_in_b_24_data_V_0_sel_wr);
    stream_in_b_24_data_V_0_sel <= stream_in_b_24_data_V_0_sel_rd;
    stream_in_b_24_data_V_0_state_cmp_full <= '0' when (stream_in_b_24_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_b_24_data_V_0_vld_in <= stream_in_b_24_TVALID;
    stream_in_b_24_data_V_0_vld_out <= stream_in_b_24_data_V_0_state(0);

    stream_in_b_24_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_b_24_last_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_b_24_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    stream_in_b_24_last_V_0_vld_in <= stream_in_b_24_TVALID;
    stream_out_a_24_TDATA <= stream_out_a_24_data_V_1_data_out;

    stream_out_a_24_TDATA_blk_n_assign_proc : process(stream_out_a_24_data_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stream_out_a_24_TDATA_blk_n <= stream_out_a_24_data_V_1_state(1);
        else 
            stream_out_a_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_a_24_TLAST <= stream_out_a_24_last_V_1_data_out;
    stream_out_a_24_TUSER <= stream_out_a_24_user_V_1_data_out;
    stream_out_a_24_TVALID <= stream_out_a_24_last_V_1_state(0);
    stream_out_a_24_data_V_1_ack_in <= stream_out_a_24_data_V_1_state(1);
    stream_out_a_24_data_V_1_ack_out <= stream_out_a_24_TREADY;

    stream_out_a_24_data_V_1_data_out_assign_proc : process(stream_out_a_24_data_V_1_payload_A, stream_out_a_24_data_V_1_payload_B, stream_out_a_24_data_V_1_sel)
    begin
        if ((stream_out_a_24_data_V_1_sel = ap_const_logic_1)) then 
            stream_out_a_24_data_V_1_data_out <= stream_out_a_24_data_V_1_payload_B;
        else 
            stream_out_a_24_data_V_1_data_out <= stream_out_a_24_data_V_1_payload_A;
        end if; 
    end process;

    stream_out_a_24_data_V_1_load_A <= (stream_out_a_24_data_V_1_state_cmp_full and not(stream_out_a_24_data_V_1_sel_wr));
    stream_out_a_24_data_V_1_load_B <= (stream_out_a_24_data_V_1_state_cmp_full and stream_out_a_24_data_V_1_sel_wr);
    stream_out_a_24_data_V_1_sel <= stream_out_a_24_data_V_1_sel_rd;
    stream_out_a_24_data_V_1_state_cmp_full <= '0' when (stream_out_a_24_data_V_1_state = ap_const_lv2_1) else '1';

    stream_out_a_24_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_a_24_data_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_a_24_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_a_24_data_V_1_vld_out <= stream_out_a_24_data_V_1_state(0);
    stream_out_a_24_last_V_1_ack_in <= stream_out_a_24_last_V_1_state(1);
    stream_out_a_24_last_V_1_ack_out <= stream_out_a_24_TREADY;

    stream_out_a_24_last_V_1_data_out_assign_proc : process(stream_out_a_24_last_V_1_payload_A, stream_out_a_24_last_V_1_payload_B, stream_out_a_24_last_V_1_sel)
    begin
        if ((stream_out_a_24_last_V_1_sel = ap_const_logic_1)) then 
            stream_out_a_24_last_V_1_data_out <= stream_out_a_24_last_V_1_payload_B;
        else 
            stream_out_a_24_last_V_1_data_out <= stream_out_a_24_last_V_1_payload_A;
        end if; 
    end process;

    stream_out_a_24_last_V_1_load_A <= (stream_out_a_24_last_V_1_state_cmp_full and not(stream_out_a_24_last_V_1_sel_wr));
    stream_out_a_24_last_V_1_load_B <= (stream_out_a_24_last_V_1_state_cmp_full and stream_out_a_24_last_V_1_sel_wr);
    stream_out_a_24_last_V_1_sel <= stream_out_a_24_last_V_1_sel_rd;
    stream_out_a_24_last_V_1_state_cmp_full <= '0' when (stream_out_a_24_last_V_1_state = ap_const_lv2_1) else '1';

    stream_out_a_24_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_a_24_last_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_a_24_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_a_24_last_V_1_vld_out <= stream_out_a_24_last_V_1_state(0);
    stream_out_a_24_user_V_1_ack_in <= stream_out_a_24_user_V_1_state(1);
    stream_out_a_24_user_V_1_ack_out <= stream_out_a_24_TREADY;

    stream_out_a_24_user_V_1_data_out_assign_proc : process(stream_out_a_24_user_V_1_payload_A, stream_out_a_24_user_V_1_payload_B, stream_out_a_24_user_V_1_sel)
    begin
        if ((stream_out_a_24_user_V_1_sel = ap_const_logic_1)) then 
            stream_out_a_24_user_V_1_data_out <= stream_out_a_24_user_V_1_payload_B;
        else 
            stream_out_a_24_user_V_1_data_out <= stream_out_a_24_user_V_1_payload_A;
        end if; 
    end process;

    stream_out_a_24_user_V_1_load_A <= (stream_out_a_24_user_V_1_state_cmp_full and not(stream_out_a_24_user_V_1_sel_wr));
    stream_out_a_24_user_V_1_load_B <= (stream_out_a_24_user_V_1_state_cmp_full and stream_out_a_24_user_V_1_sel_wr);
    stream_out_a_24_user_V_1_sel <= stream_out_a_24_user_V_1_sel_rd;
    stream_out_a_24_user_V_1_state_cmp_full <= '0' when (stream_out_a_24_user_V_1_state = ap_const_lv2_1) else '1';

    stream_out_a_24_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_a_24_user_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_a_24_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_a_24_user_V_1_vld_out <= stream_out_a_24_user_V_1_state(0);
    stream_out_b_24_TDATA <= stream_out_b_24_data_V_1_data_out;

    stream_out_b_24_TDATA_blk_n_assign_proc : process(stream_out_b_24_data_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stream_out_b_24_TDATA_blk_n <= stream_out_b_24_data_V_1_state(1);
        else 
            stream_out_b_24_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_b_24_TLAST <= stream_out_b_24_last_V_1_data_out;
    stream_out_b_24_TUSER <= stream_out_b_24_user_V_1_data_out;
    stream_out_b_24_TVALID <= stream_out_b_24_last_V_1_state(0);
    stream_out_b_24_data_V_1_ack_in <= stream_out_b_24_data_V_1_state(1);
    stream_out_b_24_data_V_1_ack_out <= stream_out_b_24_TREADY;

    stream_out_b_24_data_V_1_data_out_assign_proc : process(stream_out_b_24_data_V_1_payload_A, stream_out_b_24_data_V_1_payload_B, stream_out_b_24_data_V_1_sel)
    begin
        if ((stream_out_b_24_data_V_1_sel = ap_const_logic_1)) then 
            stream_out_b_24_data_V_1_data_out <= stream_out_b_24_data_V_1_payload_B;
        else 
            stream_out_b_24_data_V_1_data_out <= stream_out_b_24_data_V_1_payload_A;
        end if; 
    end process;

    stream_out_b_24_data_V_1_load_A <= (stream_out_b_24_data_V_1_state_cmp_full and not(stream_out_b_24_data_V_1_sel_wr));
    stream_out_b_24_data_V_1_load_B <= (stream_out_b_24_data_V_1_state_cmp_full and stream_out_b_24_data_V_1_sel_wr);
    stream_out_b_24_data_V_1_sel <= stream_out_b_24_data_V_1_sel_rd;
    stream_out_b_24_data_V_1_state_cmp_full <= '0' when (stream_out_b_24_data_V_1_state = ap_const_lv2_1) else '1';

    stream_out_b_24_data_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_b_24_data_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_b_24_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_b_24_data_V_1_vld_out <= stream_out_b_24_data_V_1_state(0);
    stream_out_b_24_last_V_1_ack_in <= stream_out_b_24_last_V_1_state(1);
    stream_out_b_24_last_V_1_ack_out <= stream_out_b_24_TREADY;

    stream_out_b_24_last_V_1_data_out_assign_proc : process(stream_out_b_24_last_V_1_payload_A, stream_out_b_24_last_V_1_payload_B, stream_out_b_24_last_V_1_sel)
    begin
        if ((stream_out_b_24_last_V_1_sel = ap_const_logic_1)) then 
            stream_out_b_24_last_V_1_data_out <= stream_out_b_24_last_V_1_payload_B;
        else 
            stream_out_b_24_last_V_1_data_out <= stream_out_b_24_last_V_1_payload_A;
        end if; 
    end process;

    stream_out_b_24_last_V_1_load_A <= (stream_out_b_24_last_V_1_state_cmp_full and not(stream_out_b_24_last_V_1_sel_wr));
    stream_out_b_24_last_V_1_load_B <= (stream_out_b_24_last_V_1_state_cmp_full and stream_out_b_24_last_V_1_sel_wr);
    stream_out_b_24_last_V_1_sel <= stream_out_b_24_last_V_1_sel_rd;
    stream_out_b_24_last_V_1_state_cmp_full <= '0' when (stream_out_b_24_last_V_1_state = ap_const_lv2_1) else '1';

    stream_out_b_24_last_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_b_24_last_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_b_24_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_b_24_last_V_1_vld_out <= stream_out_b_24_last_V_1_state(0);
    stream_out_b_24_user_V_1_ack_in <= stream_out_b_24_user_V_1_state(1);
    stream_out_b_24_user_V_1_ack_out <= stream_out_b_24_TREADY;

    stream_out_b_24_user_V_1_data_out_assign_proc : process(stream_out_b_24_user_V_1_payload_A, stream_out_b_24_user_V_1_payload_B, stream_out_b_24_user_V_1_sel)
    begin
        if ((stream_out_b_24_user_V_1_sel = ap_const_logic_1)) then 
            stream_out_b_24_user_V_1_data_out <= stream_out_b_24_user_V_1_payload_B;
        else 
            stream_out_b_24_user_V_1_data_out <= stream_out_b_24_user_V_1_payload_A;
        end if; 
    end process;

    stream_out_b_24_user_V_1_load_A <= (stream_out_b_24_user_V_1_state_cmp_full and not(stream_out_b_24_user_V_1_sel_wr));
    stream_out_b_24_user_V_1_load_B <= (stream_out_b_24_user_V_1_state_cmp_full and stream_out_b_24_user_V_1_sel_wr);
    stream_out_b_24_user_V_1_sel <= stream_out_b_24_user_V_1_sel_rd;
    stream_out_b_24_user_V_1_state_cmp_full <= '0' when (stream_out_b_24_user_V_1_state = ap_const_lv2_1) else '1';

    stream_out_b_24_user_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_b_24_user_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_b_24_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_b_24_user_V_1_vld_out <= stream_out_b_24_user_V_1_state(0);
    tmpa_V_1_fu_146_p3 <= 
        stream_in_b_24_data_V_0_data_out when (vid_id(0) = '1') else 
        stream_in_a_24_data_V_0_data_out;
    vid_id_assign_fu_140_p2 <= (vid_id xor ap_const_lv1_1);
end behav;
